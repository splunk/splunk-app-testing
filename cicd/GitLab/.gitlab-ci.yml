stages:
  - validate-app
  - generate-data
  - cypress-tests
  - build-artifacts

# runs appinspect against app, archives result
appinspect:
  image: weberjas/appinspect:latest
  stage: validate-app
  script:
    - splunk-appinspect inspect testing_app --output-file appinspect_result.json --mode precert
  artifacts:
    paths:
      - appinspect_result.json
    when: always
    expire_in: 3 days
  only:
    - merge_requests
    - master

# uses the Eventgen Docker image to recently-date the sample data
generate-data:
  stage: generate-data
  image: weberjas/eventgen7:latest
  script:
    - mkdir output
    - cp -r ./cicd/samples /samples
    - splunk_eventgen -v generate ./cicd/eventgen.conf
  artifacts:
    paths:
      - ./output
    expire_in: 1 day
  only:
    - merge_requests
    - master

# runs the Cypress integration tests against Splunk version 8.0.1
splunk729:
  stage: cypress-tests
  script:
    - cicd/cicd_runner.sh splunk_7_2_9
  artifacts:
    # cypress test output
    paths:
      - $CI_PROJECT_DIR/cicd/test/cypress/videos
    when: always
    expire_in: 3 days
  only:
    - merge_requests
    - master

# runs the Cypress integration tests against Splunk version 7.2.9
splunk801:
  stage: cypress-tests
  script:
    - cicd/cicd_runner.sh splunk_8_0_1
  artifacts:
    # cypress test output
    paths:
      - $CI_PROJECT_DIR/cicd/test/cypress/videos
    when: always
    expire_in: 3 days
  only:
    - merge_requests
    - master

# packages the sample app as an artifact result of the pipeline
package:
  stage: build-artifacts
  script:
    - mkdir -p build
    - tar cfvz build/testing_app.tgz testing_app
  artifacts:
    # cypress test output
    paths:
      - $CI_PROJECT_DIR/build
    when: always
    expire_in: 3 days
  only:
    - merge_requests
    - master
